{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./index.js"],"names":["alert","mymap","L","map","setView","tileLayer","attribution","maxZoom","id","accessToken","addTo","dataOfObject","existingXFits","cartoDBUserName","sqlQuery","showAll","hasLayer","removeLayer","XFitIcon","icon","iconUrl","shadowUrl","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","allMarkers","markers","markerClusterGroup","showCoverageOnHover","disableClusteringAtZoom","spiderfyOnMaxZoom","iconCreateFunction","cluster","getAllChildMarkers","i","length","setIcon","divIcon","html","getChildCount","$","getJSON","data","geoJson","onEachFeature","feature","layer","bindPopup","properties","name","addLayer","fitBounds","getBounds","document","ready"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"assets\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","alert('hi')\ndebugger\nalert('yo')\nvar mymap = L.map('mapid').setView([40.777686, -73.954209], 13);\n\nL.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n    attribution: 'Map data &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery Â© <a href=\"http://mapbox.com\">Mapbox</a>',\n    maxZoom: 18,\n    id: 'mapbox.dark',\n    accessToken: 'pk.eyJ1IjoibWF0c3RlZWxlIiwiYSI6ImNqOTV5MWxkeTRxM3kzMm80aW9lcm1xeWkifQ.vF_5vgkntZ5b9E-8iSBfAg'\n}).addTo(mymap);\n\nvar dataOfObject;\nvar existingXFits = null;\n\nvar cartoDBUserName = \"matsteele\";\nvar sqlQuery = \"SELECT * FROM xfitdata\";\n\n\nfunction showAll(){\n    if(mymap.hasLayer(existingXFits)){\n        mymap.removeLayer(existingXFits);\n    };\n    //Get CARTO selection as GeoJSON and Add to Map\n    // $.getJSON(\"https://\"+cartoDBUserName+\".carto.com/api/v2/sql?format=GeoJSON&q=\"+sqlQuery, function(data) {\n    //     existingXFits = L.geoJson(data,{\n    //         onEachFeature: function (feature, layer) {\n    //             layer.bindPopup('<p><b>' + feature.properties.id + '</b><br /><em>' + feature.properties.fid + '</em></p>');\n    //             //layer.cartodb_id=feature.properties.cartodb_id;\n    //         }\n    //     }).addTo(mymap);\n    // });\n\n    var XFitIcon = L.icon({\n      iconUrl: 'Images/BellIcon-01.png',\n      shadowUrl: 'Images/BellIconShadow-02.png',\n\n      iconSize:     [50, 50], // size of the icon\n      shadowSize:   [50, 50], // size of the shadow\n      iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\n      shadowAnchor: [4, 62],  // the same for the shadow\n      popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor\n    });\n\n    var allMarkers;\n\n    var markers = L.markerClusterGroup(\n      {showCoverageOnHover: false,\n       disableClusteringAtZoom: 12,\n       spiderfyOnMaxZoom:false,\n       iconCreateFunction: function (cluster) {\n         allMarkers = cluster.getAllChildMarkers();\n         for (let i = 0; i < allMarkers.length; i++) {\n           allMarkers[i].setIcon(XFitIcon);\n         }\n         return L.divIcon({ html:\n              '<img class=\"imageCluster\" src= \"images/XFiticonProposedPink-01-01.png\" alt=\"grouping\"> <div class=\"clusterCount\" >' + cluster.getChildCount() + '</div>'\n          });\n       }\n\n      }\n    );\n\n\n\n    // onEachFeature: function (feature, layer) {\n    //   layer.addTo(clusters);\n    // }\n\n\n    $.getJSON(\"https://\"+cartoDBUserName+\".carto.com/api/v2/sql?format=GeoJSON&q=\"+sqlQuery, function(data) {\n        existingXFits = L.geoJson(data,{\n            onEachFeature: function (feature, layer) {\n                // debugger\n                dataOfObject = feature;\n                layer.bindPopup('<p><b>' + feature.properties.id + '</b><br /><em>' + feature.properties.name + '</em></p>');\n                //layer.cartodb_id=feature.properties.cartodb_id;\n                //layer.addTo(markers);\n            }\n        })\n\n\n\n        //mymap.addLayer(existingXFits);\n        markers.addLayer(existingXFits);\n\n      //  markers.setIcon(XFitIcon);\n        mymap.addLayer(markers);\n        mymap.fitBounds(markers.getBounds());\n    });\n\n\n\n\n\n\n\n\n\n};\n\n// mymap.on('zoomend ', function(e) {\n//      if ( mymap.getZoom() > 7 ){ mymap.removeLayer( existingXFits )}\n//      else if ( mymap.getZoom() <= 7 ){ mymap.addLayer( existingXFits )}\n// });\n\n$( document ).ready(function() {\n  showAll();\n});\n"],"sourceRoot":""}